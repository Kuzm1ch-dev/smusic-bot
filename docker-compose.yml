services:
  discord-bot:
    image: ${IMAGE_REF}
    container_name: discord-bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - WEB_PORT=${WEB_PORT}
      - AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
      - AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET}
      - HOST=${HOST}
      - EMAIL=${EMAIL}
    volumes:
      - ./downloads:/app/downloads  # Для сохранения временных файлов
    labels:
      - traefik.enable=true
      - traefik.http.routers.discord-bot.rule=Host(`${HOST}`) && PathPrefix(`/`)
      - traefik.http.routers.discord-bot.entrypoints=websecure
      - traefik.http.routers.discord-bot.tls=true
      - traefik.http.routers.discord-bot.tls.certresolver=letsencrypt
      - traefik.http.services.discord-bot.loadbalancer.server.port=${WEB_PORT}
      - traefik.docker.network=traefik-net
    networks:
      - traefik-net
  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik-net

networks:
  traefik-net:
    name: traefik-net
    driver: bridge