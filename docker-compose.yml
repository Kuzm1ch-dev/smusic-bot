version: '3'

services:
  discord-bot:
    build: .
    container_name: discord-bot
    restart: always
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
      - AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET}
      - WEB_PORT=${WEB_PORT}
      - HOST=${HOST}
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discord-bot.rule=Host(`${HOST}`)"
      - "traefik.http.routers.discord-bot.entrypoints=websecure"
      - "traefik.http.routers.discord-bot.tls.certresolver=letsencrypt"
      - "traefik.http.services.discord-bot.loadbalancer.server.port=${WEB_PORT}"
    volumes:
      -./:/app

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-net
volumes:
  letsencrypt:
networks:
  traefik-net:
    driver: bridge