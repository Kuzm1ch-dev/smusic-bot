import discord
from discord import app_commands
from discord.ext import commands
import yt_dlp as youtube_dl
import os
import asyncio

class Song:
    def __init__(self, title, url):
        self.title = title
        self.url = url

class GuildQueue:
    def __init__(self):
        self.queue = []
        self.now_playing = None
        self.voice_client = None
        self.loop = asyncio.new_event_loop()

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='/', intents=intents)
queues = {}  # key: guild_id, value: GuildQueue

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} –≥–æ—Ç–æ–≤!')
    try:
        await bot.tree.sync()
        print('–°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!')
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}')

def get_queue(guild_id):
    if guild_id not in queues:
        queues[guild_id] = GuildQueue()
    return queues[guild_id]

async def play_next(guild_id):
    queue = get_queue(guild_id)
    if len(queue.queue) == 0:
        queue.now_playing = None
        return

    queue.now_playing = queue.queue.pop(0)
    
    try:
        queue.voice_client.play(
            discord.FFmpegPCMAudio(queue.now_playing.url, executable='ffmpeg'),
            after=lambda e: asyncio.run_coroutine_threadsafe(play_next(guild_id), queue.loop)
        )
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}')
        await play_next(guild_id)

@bot.tree.command(name='play', description='–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å')
async def play(interaction: discord.Interaction, –∑–∞–ø—Ä–æ—Å: str):
    await interaction.response.defer()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
    if not interaction.user.voice:
        return await interaction.followup.send('‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!')

    guild_id = interaction.guild.id
    queue = get_queue(guild_id)

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ/–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –±–æ—Ç–∞
    try:
        channel = interaction.user.voice.channel
        if not queue.voice_client:
            queue.voice_client = await channel.connect()
        elif queue.voice_client.channel != channel:
            await queue.voice_client.move_to(channel)
    except Exception as e:
        return await interaction.followup.send(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}')

    # –ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–∞
    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(–∑–∞–ø—Ä–æ—Å, download=False)
            if 'entries' in info:
                info = info['entries'][0]
            song = Song(info['title'], info['url'])
    except Exception as e:
        return await interaction.followup.send(f'‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —Ç—Ä–µ–∫')

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
    queue.queue.append(song)
    await interaction.followup.send(f'üé∂ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: **{song.title}** (–ü–æ–∑–∏—Ü–∏—è: {len(queue.queue)})')

    # –ó–∞–ø—É—Å–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç
    if not queue.voice_client.is_playing():
        await play_next(guild_id)

@bot.tree.command(name='skip', description='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
async def skip(interaction: discord.Interaction):
    guild_id = interaction.guild.id
    queue = get_queue(guild_id)
    
    if queue.voice_client and queue.voice_client.is_playing():
        queue.voice_client.stop()
        await interaction.response.send_message('‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω')
    else:
        await interaction.response.send_message('‚ùå –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç')

@bot.tree.command(name='queue', description='–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å')
async def show_queue(interaction: discord.Interaction):
    guild_id = interaction.guild.id
    queue = get_queue(guild_id)
    
    if not queue.queue and not queue.now_playing:
        return await interaction.response.send_message('‚ùå –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞')
    
    message = []
    if queue.now_playing:
        message.append(f'**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {queue.now_playing.title}')
    
    if queue.queue:
        message.append('\n**–û—á–µ—Ä–µ–¥—å:**')
        for i, song in enumerate(queue.queue, 1):
            message.append(f'{i}. {song.title}')
    
    await interaction.response.send_message('\n'.join(message)[:2000])

@bot.tree.command(name='leave', description='–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
async def leave(interaction: discord.Interaction):
    guild_id = interaction.guild.id
    queue = get_queue(guild_id)
    
    if queue.voice_client:
        await queue.voice_client.disconnect()
        queue.voice_client = None
        queue.queue.clear()
        queue.now_playing = None
        await interaction.response.send_message('‚úÖ –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
    else:
        await interaction.response.send_message('‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É')

if __name__ == '__main__':
    if not os.path.exists('downloads'):
        os.makedirs('downloads')
    bot.run(os.getenv('BOT_TOKEN'))